name: 'Elasticsearch plugin github action'
description: 'GitHub actio that builds elasticsearch plugins'

inputs:
  es-version:
    description: 'Major and minor version of Elasticsearch'
    required: true

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v4

  - name: Set environmeng
    shell: bash
    run: |
      case "${{ inputs.es-version }}" in
        "7.9")
          JDK_IMAGE=openjdk:14
          ;;
        "7.13")
          JDK_IMAGE=eclipse-temurin:16
          ;;
        *)
          echo "Not suported Elasticsearch version: ${{ inputs.es-version }}"
          exit 1
          ;;
      esac
      echo "JDK_IMAGE=$JDK_IMAGE" >> "${GITHUB_ENV}"
      echo "GRADLE_ARGS=--info --stacktrace" >> "${GITHUB_ENV}"

  - name: Install podman
    shell: bash
    run: |
      sudo apt-get update
      sudo apt-get install podman

  - name: Pull jdk image
    shell: bash
    run: |
      podman pull ${{ env.JDK_IMAGE }}

  - name: Cache gradle wrapper
    uses: actions/cache@v4
    with:
      path: .gradle/wrapper
      key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      restore-keys: ${{ runner.os }}-gradle-wrapper

  - name: Cache dependencies
    uses: actions/cache@v4
    with:
      path: .gradle/caches
      key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
      restore-keys: ${{ runner.os }}-gradle-deps

  - name: Assemble and run tests
    shell: bash
    run: |
      set -eux
      PODMAN_RUN_ARGS="-it --rm --userns keep-id --net host -v $(pwd):/work -w /work -e HOME=/work ${{ env.JDK_IMAGE }}"
      podman run $PODMAN_RUN_ARGS ./gradlew assemble ${{ env.GRADLE_ARGS }}
      podman run $PODMAN_RUN_ARGS ./gradlew test ${{ env.GRADLE_ARGS }}
      podman run $PODMAN_RUN_ARGS ./gradlew integTest ${{ env.GRADLE_ARGS }}

  - name: Upload plugin artifact
    uses: actions/upload-artifact@v4
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')
    with:
      name: elasticsearch-plugin
      path: |
        build/distributions/*.zip
        build/distributions/*.deb
